const fs = require('fs');
const TelegramBot = require('node-telegram-bot-api');

const token = '8166009723:AAHE5TFG0IJPXG-jwPVABQpU1RzRBkAvVwU';
const ADMIN_ID = 7791362060;
const bot = new TelegramBot(token, { polling: true });

console.log("‚úÖ Bot ishga tushdi...");

const medicines = {
  sinepar: {
    name: "Sinepar",
    price: "15 000 so'm",
    description: {
      UZ: "Og'riq qoldiruvchi dori",
      RU: "–û–±–µ–∑–±–æ–ª–∏–≤–∞—é—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ",
      EN: "Pain reliever medicine"
    },
    address: "Namangan, Davlatobod tumani, O‚Äòrta Rovuston, Rovuston savdo markazi yonida",
    phone: "+998 88 686 47 47",
    map: "https://maps.google.com/?q=41.008730,71.641760"
  },
  analgin: {
    name: "Analgin",
    price: "6 000 so'm",
    description: {
      UZ: "Oddiy og'riq qoldiruvchi",
      RU: "–û–±—ã—á–Ω–æ–µ –æ–±–µ–∑–±–æ–ª–∏–≤–∞—é—â–µ–µ",
      EN: "Regular pain reliever"
    },
    address: "Toshkent, Chilonzor tumanidagi dorixona",
    phone: "+998 99 123 45 67",
    map: "https://maps.google.com/?q=41.2950,69.2285"
  }
};

const userStates = {};

const messages = {
  UZ: {
    welcome: "üá∫üáø Marhamat, tilni tanlang üëá",
    send_phone: "üìû Telefon raqamingizni yuboring:",
    region: "üìç Viloyatingizni tanlang:",
    district: "üìç Tumaningizni tanlang:",
    pharmacy_welcome: "ü§ù Ayman Pharm dorixonasiga xush kelibsiz!",
    search: "üíä Dori nomini kiriting (kamida 3 ta harf):",
    not_found: "‚ùå Dori topilmadi",
    suggestion: "Siz rostan ham ushbu dorini buyurtma qilmoqchimisiz?",
    confirmed: "‚úÖ Buyurtmangiz qabul qilindi.",
    cancelled: "‚ùå Buyurtma bekor qilindi.",
    feedback: "üì© Takliflaringizni @umarxanoff ga yuboring.",
    send: "üì≤ Raqamni yuborish",
    change_lang: "üó£ Tilni o‚Äòzgartirish",
    change_location: "üìç Hududni o‚Äòzgartirish",
    search_btn: "üîç Qidiruv",
    feedback_btn: "üí¨ Fikr bildirish",
    more_needed: "‚ûï Yana dori kerak"
  },
  RU: {
    welcome: "üá∑üá∫ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ üëá",
    send_phone: "üìû –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
    region: "üìç –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –æ–±–ª–∞—Å—Ç—å:",
    district: "üìç –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–∞–π–æ–Ω:",
    pharmacy_welcome: "ü§ù –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–ø—Ç–µ–∫—É Ayman Pharm!",
    search: "üíä –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ (–Ω–µ –º–µ–Ω–µ–µ 3 –±—É–∫–≤):",
    not_found: "‚ùå –õ–µ–∫–∞—Ä—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
    suggestion: "–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —ç—Ç–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ?",
    confirmed: "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç.",
    cancelled: "‚ùå –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω.",
    feedback: "üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è @umarxanoff.",
    send: "üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä",
    change_lang: "üó£ –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
    change_location: "üìç –°–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ω",
    search_btn: "üîç –ü–æ–∏—Å–∫",
    feedback_btn: "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
    more_needed: "‚ûï –ù—É–∂–Ω—ã –µ—â–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞"
  },
  EN: {
    welcome: "üá¨üáß Please choose a language üëá",
    send_phone: "üìû Please send your phone number:",
    region: "üìç Choose your region:",
    district: "üìç Choose your district:",
    pharmacy_welcome: "ü§ù Welcome to Ayman Pharm pharmacy!",
    search: "üíä Enter medicine name (at least 3 letters):",
    not_found: "‚ùå Medicine not found",
    suggestion: "Do you really want to order this medicine?",
    confirmed: "‚úÖ Your order has been received.",
    cancelled: "‚ùå Order cancelled.",
    feedback: "üì© Send your feedback to @umarxanoff.",
    send: "üì≤ Send phone",
    change_lang: "üó£ Change language",
    change_location: "üìç Change region",
    search_btn: "üîç Search",
    feedback_btn: "üí¨ Feedback",
    more_needed: "‚ûï Need more medicine"
  }
};

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  userStates[chatId] = {};
  const langs = ['üá∫üáø UZ', 'üá∑üá∫ RU', 'üá¨üáß EN'];
  bot.sendMessage(chatId, `${messages.UZ.welcome}\n\n${messages.RU.welcome}\n\n${messages.EN.welcome}`, {
    reply_markup: {
      keyboard: [langs],
      resize_keyboard: true,
      one_time_keyboard: true
    }
  });
});

bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  if (!userStates[chatId]) userStates[chatId] = {};
  const state = userStates[chatId];

  if (['üá∫üáø UZ', 'üá∑üá∫ RU', 'üá¨üáß EN'].includes(text)) {
    state.lang = text.includes('UZ') ? 'UZ' : text.includes('RU') ? 'RU' : 'EN';
    bot.sendMessage(chatId, messages[state.lang].send_phone, {
      reply_markup: {
        keyboard: [[{ text: 'üì≤ ' + messages[state.lang].send, request_contact: true }]],
        resize_keyboard: true,
        one_time_keyboard: true
      }
    });
    return;
  }

  if (msg.contact) {
    state.phone = msg.contact.phone_number;
    bot.sendMessage(chatId, messages[state.lang].region, {
      reply_markup: {
        keyboard: [['Namangan'], ['Toshkent']],
        resize_keyboard: true,
        one_time_keyboard: true
      }
    });
    return;
  }

  if (['Namangan', 'Toshkent'].includes(text)) {
    state.region = text;
    bot.sendMessage(chatId, messages[state.lang].district, {
      reply_markup: {
        keyboard: [['Davlatobod'], ['Chilonzor']],
        resize_keyboard: true,
        one_time_keyboard: true
      }
    });
    return;
  }

  if (['Davlatobod', 'Chilonzor'].includes(text)) {
    state.district = text;
    const m = messages[state.lang];
    bot.sendMessage(chatId, m.pharmacy_welcome, {
      reply_markup: {
        keyboard: [
          [m.search_btn],
          [m.change_lang, m.change_location],
          [m.feedback_btn]
        ],
        resize_keyboard: true
      }
    });
    return;
  }

  const m = messages[state.lang || 'UZ'];

  if (text === m.change_lang) {
    bot.sendMessage(chatId, `${messages.UZ.welcome}\n\n${messages.RU.welcome}\n\n${messages.EN.welcome}`, {
      reply_markup: {
        keyboard: [['üá∫üáø UZ', 'üá∑üá∫ RU', 'üá¨üáß EN']],
        resize_keyboard: true,
        one_time_keyboard: true
      }
    });
    return;
  }

  if (text === m.change_location) {
    bot.sendMessage(chatId, m.region, {
      reply_markup: {
        keyboard: [['Namangan'], ['Toshkent']],
        resize_keyboard: true,
        one_time_keyboard: true
      }
    });
    return;
  }

  if (text === m.feedback_btn) {
    bot.sendMessage(chatId, m.feedback);
    return;
  }

  if (text === m.search_btn) {
    bot.sendMessage(chatId, m.search);
    return;
  }

  const keyword = text?.toLowerCase();
  if (keyword && keyword.length >= 3 && medicines[keyword]) {
    const med = medicines[keyword];
    bot.sendMessage(chatId, `üíä ${med.name}\nüíµ ${med.price}\nüìç ${med.address}\nüìû ${med.phone}\nüó∫ [Google xarita havola](${med.map})\n\n${m.suggestion}`, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: '‚úÖ Ha', callback_data: `confirm_${keyword}` }, { text: '‚ùå Yo‚Äòq', callback_data: 'cancel' }],
          [{ text: m.more_needed, callback_data: 'more_needed' }]
        ]
      }
    });
  } else if (keyword && keyword.length >= 3) {
    bot.sendMessage(chatId, m.not_found);
  }
});

bot.on('callback_query', (query) => {
  const chatId = query.message.chat.id;
  const state = userStates[chatId] || {};
  const lang = state.lang || 'UZ';
  const m = messages[lang];

  if (query.data.startsWith('confirm_')) {
    const medKey = query.data.split('_')[1];
    const med = medicines[medKey];
    const order = `üì¶ Yangi buyurtma:\nüë§ ID: ${chatId}\nüìû Tel: ${state.phone}\nüìç Hudud: ${state.region}, ${state.district}\nüíä Dori: ${med.name}\nüíµ Narx: ${med.price}\n\n`;

    bot.sendMessage(ADMIN_ID, order);
    bot.sendMessage(chatId, m.confirmed);
    fs.appendFile('orders.txt', order, (err) => {
      if (err) console.error('‚ùå Faylga yozishda xatolik:', err);
    });
  } else if (query.data === 'cancel') {
    bot.sendMessage(chatId, m.cancelled);
  } else if (query.data === 'more_needed') {
    bot.sendMessage(chatId, m.search);
  }
});